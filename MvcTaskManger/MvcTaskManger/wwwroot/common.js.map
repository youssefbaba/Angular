{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;AAQO,MAAM,qBAAqB;IAEhC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,iBAAiB;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,oBAAoB,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,kBAAkB,CAAC,eAA8B;QAC/C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAe,oBAAoB,EAAE,eAAe,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7G,CAAC;IAED,kBAAkB,CAAC,cAAuB,EAAG,oBAAmC;QAC9E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,sBAAsB,cAAc,EAAE,EAAE,oBAAoB,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACnI,CAAC;IAED,kBAAkB,CAAC,cAAuB;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAO,sBAAsB,cAAc,EAAE,CAAC,CAAC;IAC9E,CAAC;;0FAlBU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;;;;;;;ACEb,MAAM,mBAAmB;IAE9B,cAAc;IACd,YAAoB,UAAuB;QAAvB,eAAU,GAAV,UAAU,CAAa;IAAI,CAAC;IAEhD,UAAU;IACV,kBAAkB;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,kBAAkB,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,gBAAgB,CAAC,aAA0B;QACzC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAa,kBAAkB,EAAE,aAAa,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IACpG,CAAC;IAED,gBAAgB,CAAC,YAAqB,EAAE,kBAA+B;QACrE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,oBAAoB,YAAY,EAAE,EAAE,kBAAkB,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IACxH,CAAC;IAED,gBAAgB,CAAC,YAAqB;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAO,oBAAoB,YAAY,EAAE,CAAC,CAAC;IAC1E,CAAC;;sFApBU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM","sources":["./src/app/services/task-priorities.service.ts","./src/app/services/task-statuses.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskPriority } from '../models/task-priority';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskPrioritiesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getTaskPriorities(): Observable<TaskPriority[]> {\n    return this.httpClient.get<TaskPriority[]>('api/TaskPriorities', { responseType: 'json' });\n  }\n\n  insertTaskPriority(newTaskPriority : TaskPriority): Observable<TaskPriority> {\n    return this.httpClient.post<TaskPriority>('api/TaskPriorities', newTaskPriority, { responseType: 'json' });\n  }\n\n  updateTaskPriority(taskPriorityID : number , existingTaskPriority : TaskPriority): Observable<TaskPriority> {\n    return this.httpClient.put<TaskPriority>(`api/TaskPriorities/${taskPriorityID}`, existingTaskPriority, { responseType: 'json' });\n  }\n\n  deleteTaskPriority(taskPriorityID : number): Observable<void> {\n    return this.httpClient.delete<void>(`api/TaskPriorities/${taskPriorityID}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskStatus } from '../models/task-status';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStatusesService {\n\n  // Constructor\n  constructor(private httpClient : HttpClient) { }\n\n  // Methods\n  getAllTaskStatuses(): Observable<TaskStatus[]>{\n    return this.httpClient.get<TaskStatus[]>(\"api/TaskStatuses\", {responseType:'json'});\n  }\n\n  insertTaskStatus(newTaskStatus : TaskStatus): Observable<TaskStatus>{\n    return this.httpClient.post<TaskStatus>(\"api/TaskStatuses\", newTaskStatus, {responseType:'json'});\n  }\n\n  updateTaskStatus(taskStatusID : number, existingTaskStatus : TaskStatus): Observable<TaskStatus>{\n    return this.httpClient.put<TaskStatus>(`api/TaskStatuses/${taskStatusID}`, existingTaskStatus, {responseType:'json'});\n  }\n\n  deleteTaskStatus(taskStatusID : number): Observable<void>{\n    return this.httpClient.delete<void>(`api/TaskStatuses/${taskStatusID}`);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}