{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/my-profile/my-profile.component.ts","./src/app/components/my-profile/my-profile.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/directives/alert.directive.ts","./src/app/directives/repeater.directive.ts","./src/app/guards/can-activate-guard.service.ts","./src/app/guards/can-deactivate-guard.service.ts","./src/app/guards/not-authenticated-guard.service.ts","./src/app/guards/redirection-guard.service.ts","./src/app/helpers/my-animations.ts","./src/app/interceptors/jwt-interceptor.service.ts","./src/app/interceptors/jwt-un-authorized-interceptor.service.ts","./src/app/models/login-view-model.ts","./src/app/models/sign-up-view-model.ts","./src/app/services/custom-validators.service.ts","./src/app/services/login.service.ts","./src/app/services/projects.service.ts","./src/app/services/router-logger.service.ts","./src/app/services/sign-up.service.ts","./src/app/shared/directives/client-location-status-validator.directive.ts","./src/app/shared/directives/component-loader.directive.ts","./src/app/shared/directives/project-idunique-validator.directive.ts","./src/app/shared/directives/team-size-validator.directive.ts","./src/app/shared/pipes/filter.pipe.ts","./src/app/shared/pipes/number-to-words.pipe.ts","./src/app/shared/pipes/paging.pipe.ts","./src/app/shared/pipes/sort.pipe.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\r\nimport { CanActivateGuardService } from './guards/can-activate-guard.service';\r\nimport { NotAuthenticatedGuardService } from './guards/not-authenticated-guard.service';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { RedirectionGuardService } from './guards/redirection-guard.service';\r\nimport { CanDeactivateGuardService } from './guards/can-deactivate-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'about', component: AboutComponent , data: {linkIndex : 0}},\r\n  { path: 'login', component: LoginComponent, canActivate: [RedirectionGuardService], data: {linkIndex : 1}},\r\n  { path: 'signup', component: SignUpComponent, canActivate: [NotAuthenticatedGuardService], canDeactivate: [CanDeactivateGuardService], data: {linkIndex : 2}},\r\n  { path: 'my-profile', component: MyProfileComponent, canActivate: [CanActivateGuardService], data: { expectedRoles: [\"Admin\", \"Employee\"], linkIndex: 5} },\r\n  { path: 'admin', loadChildren: () => import(\"./admin/admin.module\").then(m => m.AdminModule)},  // Leazy loading AdminModule\r\n  { path: 'employee', loadChildren: () => import(\"./employee/employee.module\").then(m => m.EmployeeModule)}  // leazy loading EmployeeModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true , enableTracing:false, preloadingStrategy: PreloadAllModules})],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, } from '@angular/core';\r\nimport { LoginService } from './services/login.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { RouterLoggerService } from './services/router-logger.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { fadeAnimation, keyFrameAnimation, slideLeftOrRightAnimation, slideUpAnimation, zoomLeftAnimation, zoomUpAnimation } from './helpers/my-animations';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  // animations: [fadeAnimation]\r\n  // animations: [slideUpAnimation]\r\n  // animations: [zoomUpAnimation]\r\n  // animations: [zoomLeftAnimation]\r\n  animations: [slideLeftOrRightAnimation]\r\n  //animations: [keyFrameAnimation] \r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(public loginService: LoginService,\r\n    private domSanitizer: DomSanitizer,\r\n    private routerLoggerService: RouterLoggerService,\r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.subscribe({\r\n      next: (event) => {\r\n        if (event instanceof NavigationEnd) {\r\n          let userName = (this.loginService.getCurrentUser() != null) ?\r\n            this.loginService.getCurrentUser().userName : \"anonymous\";\r\n\r\n          let logMessage = `${new Date().toLocaleString()} : ${userName} navigate to ${event.url}`;\r\n\r\n          this.routerLoggerService.log(logMessage).subscribe();\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n  mySanitizedInnerHtml = \"<iframe src='https://www.w3schools.com' title='W3Schools Free Online Web Tutorials'></iframe>\";\r\n\r\n  mySanitizedHref = \"javascript:window.open('https://www.w3schools.com')\" ;\r\n\r\n  untrustedURL  = \"https://www.mmlpqtpkasjdashdjahd.com\";\r\n\r\n  myUnSanitizedInnerHtml = this.domSanitizer.bypassSecurityTrustHtml(this.mySanitizedInnerHtml);\r\n\r\n  myUnSanitizedHref = this.domSanitizer.bypassSecurityTrustUrl(this.mySanitizedHref);\r\n\r\n  trustedURL = this.domSanitizer.bypassSecurityTrustResourceUrl(this.untrustedURL);\r\n  */\r\n\r\n  getState(outlet: any) {  // outlet represents router-outlet\r\n    return (outlet.isActivated) ? \r\n    outlet.activatedRoute.snapshot.url[0].path && outlet.activatedRouteData[\"linkIndex\"] :\r\n    \"none\";\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-success\">\r\n    <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"#\">Angular Task Manager</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n\r\n                <ng-container>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>\r\n                    </li>\r\n                </ng-container>\r\n\r\n                <ng-container\r\n                    *ngIf=\"this.loginService.isAuthenticated() && this.loginService.getCurrentUser()?.role == 'Admin'\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['/admin', 'dashboard']\">Dashboard</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['/admin', 'projects']\">Projects</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['/admin', 'masters']\">Masters</a>\r\n                    </li>\r\n                </ng-container>\r\n\r\n                <ng-container\r\n                    *ngIf=\"loginService.isAuthenticated() && this.loginService.getCurrentUser()?.role == 'Employee'\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['/employee', 'tasks']\">Tasks</a>\r\n                    </li>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"loginService.isAuthenticated()\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\"\r\n                            [routerLink]=\"['/my-profile']\">{{loginService.getCurrentUser().userName}}</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" (click)=\"loginService.logout()\" style=\"cursor: pointer;\">Logout</a>\r\n                    </li>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"!loginService.isAuthenticated()\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['/signup']\">Register</a>\r\n                    </li>\r\n                </ng-container>\r\n\r\n                <!-- Test for Sanitizing XSS -->\r\n                <!--                 \r\n                <li class=\"nav-item\">\r\n                    {{mySanitizedInnerHtml}}\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <p [innerHTML]=\"mySanitizedInnerHtml\">Hello</p>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a href=\"#\" [href]=\"mySanitizedHref\">Hi</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <iframe width=\"100px\" height=\"100px\" frameBorder=\"0\" [src]=\"untrustedURL\"></iframe>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a href=\"#\">\r\n                        <img [src]=\"mySanitizedHref\" alt=\"Not Found\">\r\n                    </a>\r\n                </li>\r\n\r\n                <li class=\"nav-item\">\r\n                    <p [innerHTML]=\"myUnSanitizedInnerHtml\">Hello</p>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a href=\"#\" [href]=\"myUnSanitizedHref\">Hi</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <iframe width=\"100px\" height=\"100px\" frameBorder=\"0\" [src]=\"trustedURL\"></iframe>\r\n                </li> \r\n                -->\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n\r\n<div class=\"container-fluid\" [@routeAnimations]=\"getState(outlet)\">\r\n    <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { JwtInterceptorService } from './interceptors/jwt-interceptor.service';\r\nimport { JwtUnAuthorizedInterceptorService } from './interceptors/jwt-un-authorized-interceptor.service';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\r\nimport { AlertDirective } from './directives/alert.directive';\r\nimport { RepeaterDirective } from './directives/repeater.directive';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AboutComponent,\r\n    MyProfileComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    AlertDirective,\r\n    RepeaterDirective\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => {\r\n          return ((sessionStorage.getItem(\"currrentUser\") != null) ?\r\n          JSON.parse(sessionStorage.getItem(\"currrentUser\") as string).token : null);\r\n        }\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtInterceptorService,\r\n      multi: true\r\n    }, \r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtUnAuthorizedInterceptorService,\r\n      multi: true\r\n    },\r\n    DatePipe \r\n\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss'],\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<h1>About Page</h1>\r\n<div>\r\n    <h3 class=\"text-secondary text-uppercase fw-semibold text-center\">How We Are</h3>\r\n    <div class=\"row row-cols-1 row-cols-md-2 row-cols-md-3 g-4\">\r\n        <div class=\"col\">\r\n            <div class=\"card\">\r\n                <img src=\"assets/aboutOne.jpg\" class=\"card-img-top\" alt=\"AboutOne\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Lorem, ipsum dolor.</h5>\r\n                    <p class=\"card-text\">\r\n                        This is a longer card with supporting text below as a natural lead-in to\r\n                        additional content. This content is a little bit longer.\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam odit tempora et \r\n                        ea impedit provident dolores architecto voluptatibus beatae sequi. Laudantium iusto\r\n                        quis dicta doloremque.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col\">\r\n            <div class=\"card\">\r\n                <img src=\"assets/aboutTwo.jpg\" class=\"card-img-top\" alt=\"aboutTwo\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Lorem ipsum dolor sit.</h5>\r\n                    <p class=\"card-text\">\r\n                        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Esse, \r\n                        tenetur? Dolorem illo ullam incidunt nobis quo est, eius minima esse\r\n                        autem id illum, reiciendis mollitia delectus omnis praesentium ad alias.\r\n                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Blanditiis eaque \r\n                        nam repudiandae.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col\">\r\n            <div class=\"card\">\r\n                <img src=\"assets/aboutThree.jpg\" class=\"card-img-top\" alt=\"aboutThree\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Lorem, ipsum dolor.</h5>\r\n                    <p class=\"card-text\">\r\n                        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Esse, \r\n                        tenetur? Dolorem illo ullam incidunt nobis quo est, eius minima esse\r\n                        autem id illum, reiciendis mollitia delectus omnis praesentium ad alias.\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col\">\r\n            <div class=\"card\">\r\n                <img src=\"assets/aboutFour.jpg\" class=\"card-img-top\" alt=\"aboutFour\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Lorem ipsum dolor sit.</h5>\r\n                    <p class=\"card-text\">\r\n                        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Esse, \r\n                        tenetur? Dolorem illo ullam incidunt nobis quo est, eius minima esse\r\n                        autem id illum, reiciendis mollitia delectus omnis praesentium ad alias.\r\n                        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Porro, labore.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { LoginViewModel } from '../../models/login-view-model';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  // Properties\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: any = null;\n  @ViewChild(\"inputEmailInLoginForm\") inputEmail!: ElementRef;\n\n  // Constructor\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  // Methods\n  ngOnInit(): void {\n  }\n\n  onClickLogin(): void {\n    this.loginService.login(this.loginViewModel).subscribe({\n      next: (response: any) => {\n        if (this.loginService.getCurrentUser().role == \"Admin\") {\n          this.router.navigate(['/admin', 'dashboard']);\n        } else {\n          this.router.navigate(['/employee', 'tasks']);\n        }\n      },\n      error: (error) => {\n        console.log(error);\n        this.loginError = \"Invalid Email or Password\";\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    \n    this.inputEmail.nativeElement.focus();\n  }\n\n}\n","<form>\n    <div class=\"row\">\n        <div class=\"col-md-9 col-lg-6 col-xl-5 mx-auto\">\n            <div class=\"card mt-4\">\n                <div class=\"card-header text-bg-secondary\">\n                    <h3>Login</h3>\n                    <!-- <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"loginError != null\">\n                        {{loginError}}\n                    </div> -->\n                    <div *ngIf=\"(loginError != null)\" appAlert [error]=\"loginError\"></div>\n                    <!-- Host Element for Alert Directive -->\n                </div>\n                <div class=\"my-3 ps-4\">\n                    <span>Not Yet Registred? </span><a routerLink=\"/signup\">Register</a>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"row mb-3\">\n                        <label for=\"txtEmailLogin\" class=\"col-sm-4 col-form-label\">Email</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"email\" class=\"form-control\" id=\"txtEmailLogin\" placeholder=\"Email\" name=\"email\"\n                                [(ngModel)]=\"loginViewModel.email\" #inputEmailInLoginForm>\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                        <label for=\"txtPasswordLogin\" class=\"col-sm-4 col-form-label\">Password</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"password\" class=\"form-control\" id=\"txtPasswordLogin\" placeholder=\"Password\"\n                                name=\"password\" [(ngModel)]=\"loginViewModel.password\">\n                        </div>\n                    </div>\n                    <div class=\"card-footer text-end\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onClickLogin()\">Login</button>\n\n                        <!-- \n                        <div *appRepeater></div>\n\n                        // Converted as bellow\n                        <ng-template>\n                            <div></div>\n                        </ng-template> \n                        -->\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-my-profile',\r\n  templateUrl: './my-profile.component.html',\r\n  styleUrls: ['./my-profile.component.scss'],\r\n})\r\nexport class MyProfileComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<h1>My Profile</h1>\r\n<div class=\"container\">\r\n  <div class=\"row gutters-sm mt-3\">\r\n    <div class=\"col-md-4 mb-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-flex flex-column align-items-center text-center\">\r\n            <img src=\"assets/my-profile.png\" alt=\"Admin\" class=\"rounded-circle\" width=\"150\">\r\n            <div class=\"mt-3\">\r\n              <h4>John Doe</h4>\r\n              <p class=\"text-secondary mb-1\">Full Stack Developer</p>\r\n              <p class=\"text-muted font-size-sm\">Bay Area, San Francisco, CA</p>\r\n              <button class=\"btn btn-primary me-2\">Follow</button>\r\n              <button class=\"btn btn-outline-primary\">Message</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <div class=\"card mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-3\">\r\n              <h6 class=\"mb-0\">Full Name</h6>\r\n            </div>\r\n            <div class=\"col-sm-9 text-secondary\">\r\n              Kenneth Valdez\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-3\">\r\n              <h6 class=\"mb-0\">Email</h6>\r\n            </div>\r\n            <div class=\"col-sm-9 text-secondary\">\r\n              fip@jukmuh.al\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-3\">\r\n              <h6 class=\"mb-0\">Phone</h6>\r\n            </div>\r\n            <div class=\"col-sm-9 text-secondary\">\r\n              (239) 816-9029\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-3\">\r\n              <h6 class=\"mb-0\">Mobile</h6>\r\n            </div>\r\n            <div class=\"col-sm-9 text-secondary\">\r\n              (320) 380-4539\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-3\">\r\n              <h6 class=\"mb-0\">Address</h6>\r\n            </div>\r\n            <div class=\"col-sm-9 text-secondary\">\r\n              Bay Area, San Francisco, CA\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n              <button class=\"btn btn-info\">Edit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CountriesService } from '../../services/countries.service';\nimport { Country } from '../../models/country';\nimport { CustomValidatorsService } from '../../services/custom-validators.service';\nimport { SignUpService } from '../../services/sign-up.service';\nimport { SignUpViewModel } from '../../models/sign-up-view-model';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\nimport { CanComponentDeactivate } from '../../guards/can-deactivate-guard.service';\n\n// Define a custom interface to extend FormGroup\ninterface CustomFormGroup extends FormGroup {\n    submitted: boolean;\n}\n\n@Component({\n    selector: 'app-sign-up',\n    templateUrl: './sign-up.component.html',\n    styleUrls: ['./sign-up.component.scss']\n})\n\n\nexport class SignUpComponent implements OnInit, AfterViewInit, CanComponentDeactivate {\n\n    // Properties\n    signUpForm!: CustomFormGroup;  // I'm certain that the signUpForm property will be initialized before being used\n    genderOptions: string[] = ['Male', 'Female'];\n    countries: Country[] = [];\n    signUpViewModel: SignUpViewModel = new SignUpViewModel();\n    signUpError: any = null;\n\n    @ViewChild(\"inputFirstNameSignUp\") inputFirstName! : ElementRef;\n\n    canLeave: boolean = true;  // by default the user can leave the current route\n\n    // Constructor\n    constructor(private formBuilder: FormBuilder,\n        private customValidatorsService: CustomValidatorsService,\n        private signUpService: SignUpService,\n        private loginService: LoginService,\n        private router: Router\n    ) { }\n\n    // Methods\n    ngOnInit(): void {\n\n        this.signUpService.getAllCountries().subscribe({\n            next: (response: Country[]) => {\n                this.countries = response;\n            }\n        });\n\n        this.signUpForm = this.formBuilder.group({\n            personName: this.formBuilder.group({\n                firstName: [null, {\n                    validators: [Validators.required, Validators.minLength(2)]\n                }],\n                lastName: [null, {\n                    validators: [Validators.required, Validators.minLength(2)]\n                }\n                ]\n            }),\n            email: [null, {\n                validators: [Validators.required, Validators.email],  // Sync Validators\n                asyncValidators: [this.customValidatorsService.duplicateEmail()],  // Async Validators\n                updateOn: 'blur' // async validator run only when the input field loses focus (on blur).\n            }],\n            password: [null, {\n                validators: [Validators.required]\n            }],\n            confirmPassword: [null, {\n                validators: [Validators.required]\n            }],\n            mobile: [null, {\n                validators: [Validators.required, Validators.pattern(\"^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$\")]\n            }],\n            dateOfBirth: [null, {\n                validators: [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]\n            }],\n            gender: [null, {\n                validators: [Validators.required]\n            }],\n            countryID: [null, {\n                validators: [Validators.required]\n            }],\n            receiveNewsLetters: null,\n            skills: this.formBuilder.array([])\n        },\n            {\n                validators: this.customValidatorsService.compareValidator(\"confirmPassword\", \"password\")\n            }) as CustomFormGroup;\n\n        // Add the custom property to the FormGroup\n        this.signUpForm.submitted = false;\n\n        this.signUpForm.valueChanges.subscribe({\n            next: (value: any) => {    // value here represents this.this.signUpForm.value\n                // Do something here ....\n                //console.log(value);\n                this.canLeave = false;  // the user can't leave the current route\n            }\n        });\n    }\n\n    ngAfterViewInit(): void {\n        \n        this.inputFirstName.nativeElement.focus();\n    }\n\n    onSubmitSignUp() {\n\n        this.signUpForm.submitted = true\n\n        if (this.signUpForm.valid) {\n\n            this.signUpViewModel = this.signUpForm.value;\n\n            this.signUpService.signUp(this.signUpViewModel).subscribe({\n                next: (response: any) => {\n                    if (this.loginService.getCurrentUser().role == \"Admin\") {\n                        this.router.navigate(['/admin', 'dashboard']);\n                    } else {\n                        this.router.navigate(['/employee', 'tasks']);\n                    }\n                    this.signUpForm.submitted = false;\n                    this.canLeave = true;\n                },\n                error: (error) => {\n                    console.log(error);\n                    this.signUpError = \"Invalid Data\";\n                }\n            });\n        }\n\n        // Get value of form element\n        // console.log(this.signUpForm.value.personName.firstName);\n        // console.log(this.signUpForm.value.personName.lastName);\n        // console.log(this.signUpForm.value.email);\n        // console.log(this.signUpForm.value.gender);\n\n        // Display current form value\n        //console.log(this.signUpForm);\n        //console.log(this.signUpForm.value);\n\n        // Set value (you must set value of all form elements)\n        // this.signUpForm.setValue({\n        //   firstName: \"John\",\n        //   lastName: \"Smith\",\n        //   email: \"John123@gmail.com\",\n        //   password: \"John@1234\",\n        //   confirmPassword: \"John@1234\",\n        //   mobile: \"+1 (433) 461-5572\",\n        //   dateOfBirth: new Date(2000, 6, 24),\n        //   gender: \"male\",\n        //   countryID: 1,\n        //   receiveNewsLetters :true\n        // })\n        //console.log(this.signUpForm.value);\n\n        // PatchValue (set the specific value that you want to update)\n        // this.signUpForm.patchValue({\n        //   firstName: \"John\",\n        //   lastName: \"Smith\",\n        //   email: \"John123@gmail.com\",\n        //   password: \"John@1234\",\n        //   confirmPassword: \"John@1234\"\n        // })\n        // console.log(this.signUpForm.value);\n\n        // Reset the form (clear all form elements and set them to null)\n        // this.signUpForm.reset();\n        // console.log(this.signUpForm.value);\n\n        // Reset with parameters (clear all form elements set to null + updates the values by using those given values)\n        // this.signUpForm.reset({\n        //   firstName: \"David\",\n        //   lastName: \"Drown\",\n        //   email: \"David123@gmail.com\"\n        // });\n        // console.log(this.signUpForm.value);\n\n    }\n\n    get skills(): FormArray {  // Getter \n\n        return this.signUpForm.get(\"skills\") as FormArray;\n    }\n\n    initialSkills(): FormGroup {\n\n        return this.formBuilder.group({\n            skillName: [null, {\n                validators: [Validators.required]\n            }],\n            expertiseLevel: [null, {\n                validators: [Validators.required]\n            }]\n        });\n    }\n\n    onAddSkill() {\n\n        this.skills.push(this.initialSkills());\n    }\n\n    onRemoveSkill(index: number) {\n\n        this.skills.removeAt(index);\n    }\n\n\n}\n","<form [formGroup]=\"signUpForm\" novalidate=\"novalidate\" (ngSubmit)=\"onSubmitSignUp()\">\n    <div class=\"row\">\n        <div class=\"col-md-9 col-lg-6 col-xl-5 mx-auto\">\n            <div class=\"card mt-4\">\n                <div class=\"card-header text-bg-secondary\">\n                    <h3>SignUp</h3>\n                </div>\n                <div class=\"alert alert-danger\" role=\"alert\" *Ngif=\"signUpError != null\">\n                    {{signUpError}}\n                </div>\n                <div class=\"my-3 ps-4\">\n                    <span>Already Registred? </span><a routerLink=\"/login\">Login</a>\n                </div>\n                <div class=\"card-body\">\n\n                    <!-- Nested Form Group Starts -->\n                    <div class=\"row mb-3\" formGroupName=\"personName\">\n                        <label for=\"txtFirstNameSignUp\" class=\"col-sm-4 col-form-label\">FirstName</label>\n\n                        <div class=\"col-sm-8\">\n                            <input type=\"text\" class=\"form-control\" id=\"txtFirstNameSignUp\" placeholder=\"FirstName\"\n                                name=\"firstName\" formControlName=\"firstName\" #inputFirstNameSignUp [ngClass]=\"{\n                                'is-invalid': signUpForm.get('personName.firstName')?.invalid && (signUpForm.get('personName.firstName')?.dirty || signUpForm.get('personName.firstName')?.touched || signUpForm.submitted),\n                                'is-valid': signUpForm.get('personName.firstName')?.valid && (signUpForm.get('personName.firstName')?.dirty || signUpForm.get('personName.firstName')?.touched || signUpForm.submitted)\n                                }\">\n\n                            <!-- Error Messages -->\n                            <div\n                                *ngIf=\"signUpForm.get('personName.firstName')?.invalid && (signUpForm.get('personName.firstName')?.dirty || signUpForm.get('personName.firstName')?.touched || signUpForm.submitted)\">\n                                <div class=\"text-danger\"\n                                    *ngIf=\"signUpForm.get('personName.firstName')?.errors?.['required']\">\n                                    First name can't be blank.\n                                </div>\n                                <div class=\"text-danger\"\n                                    *ngIf=\"signUpForm.get('personName.firstName')?.errors?.['minlength']\">\n                                    First name should contain atleast 2 characters.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-3\" formGroupName=\"personName\">\n                        <label for=\"txtLastNameSignUp\" class=\"col-sm-4 col-form-label\">LastName</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"text\" class=\"form-control\" id=\"txtLastNameSignUp\" placeholder=\"LastName\"\n                                name=\"lastName\" formControlName=\"lastName\" [ngClass]=\"{\n                                'is-invalid': signUpForm.get('personName.lastName')?.invalid && (signUpForm.get('personName.lastName')?.dirty || signUpForm.get('personName.lastName')?.touched || signUpForm.submitted),\n                                'is-valid': signUpForm.get('personName.lastName')?.valid && (signUpForm.get('personName.lastName')?.dirty || signUpForm.get('personName.lastName')?.touched || signUpForm.submitted)\n                                }\">\n\n                            <!-- Error Messages -->\n                            <div\n                                *ngIf=\"signUpForm.get('personName.lastName')?.invalid && (signUpForm.get('personName.lastName')?.dirty || signUpForm.get('personName.lastName')?.touched || signUpForm.submitted)\">\n                                <div class=\"text-danger\"\n                                    *ngIf=\"signUpForm.get('personName.lastName')?.errors?.['required']\">\n                                    Last name can't be blank.\n                                </div>\n                                <div class=\"text-danger\"\n                                    *ngIf=\"signUpForm.get('personName.lastName')?.errors?.['minlength']\">\n                                    Last name should contain atleast 2 characters.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <!-- Nested Form Group Ends -->\n\n                    <div class=\"row mb-3\">\n                        <label for=\"txtEmailSignUp\" class=\"col-sm-4 col-form-label\">Email</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"email\" class=\"form-control\" id=\"txtEmailSignUp\" placeholder=\"Email\"\n                                name=\"email\" formControlName=\"email\" [ngClass]=\"{\n                                'is-invalid': signUpForm.get('email')?.invalid && (signUpForm.get('email')?.dirty || signUpForm.get('email')?.touched || signUpForm.submitted),\n                                'is-valid': signUpForm.get('email')?.valid && (signUpForm.get('email')?.dirty || signUpForm.get('email')?.touched || signUpForm.submitted)\n                                }\">\n\n                            <!-- Error Messages -->\n                            <div\n                                *ngIf=\"signUpForm.get('email')?.invalid && (signUpForm.get('email')?.dirty || signUpForm.get('email')?.touched || signUpForm.submitted)\">\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('email')?.errors?.['required']\">\n                                    Email can't be blank.\n                                </div>\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('email')?.errors?.['email']\">\n                                    Email is invalid.\n                                </div>\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('email')?.errors?.['duplicateEmail']\">\n                                    Duplicate email.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                        <label for=\"txtPasswordSignUp\" class=\"col-sm-4 col-form-label\">Password</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"password\" class=\"form-control\" id=\"txtPasswordSignUp\" placeholder=\"Password\"\n                                name=\"password\" formControlName=\"password\" [ngClass]=\"{\n                                'is-invalid': signUpForm.get('password')?.invalid && (signUpForm.get('password')?.dirty || signUpForm.get('password')?.touched || signUpForm.submitted),\n                                'is-valid': signUpForm.get('password')?.valid && (signUpForm.get('password')?.dirty || signUpForm.get('password')?.touched || signUpForm.submitted)\n                                }\">\n\n                            <!-- Error Messages -->\n                            <div\n                                *ngIf=\"signUpForm.get('password')?.invalid && (signUpForm.get('password')?.dirty || signUpForm.get('password')?.touched || signUpForm.submitted)\">\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('password')?.errors?.['required']\">\n                                    Password can't be blank.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                        <label for=\"txtConfirmPasswordSignUp\" class=\"col-sm-4 col-form-label\">Confirm Password</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"password\" class=\"form-control\" id=\"txtConfirmPasswordSignUp\"\n                                placeholder=\"Confirm Password\" name=\"confirmPassword\" formControlName=\"confirmPassword\"\n                                [ngClass]=\"{\n                                'is-invalid': signUpForm.get('confirmPassword')?.invalid && (signUpForm.get('confirmPassword')?.dirty || signUpForm.get('confirmPassword')?.touched || signUpForm.submitted),\n                                'is-valid': signUpForm.get('confirmPassword')?.valid && (signUpForm.get('confirmPassword')?.dirty || signUpForm.get('confirmPassword')?.touched || signUpForm.submitted)\n                                }\">\n\n                            <!-- Error Messages  -->\n                            <div *ngIf=\"signUpForm.get('confirmPassword')?.invalid && (signUpForm.get('confirmPassword')?.dirty || signUpForm.get('confirmPassword')?.touched || signUpForm.submitted) &&\n                                signUpForm.get('confirmPassword')?.errors?.['required']\" class=\"text-danger\">\n                                Confirm password can't be blank.\n                            </div>\n                            <div *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.['compareValidator']\"\n                                class=\"text-danger\">\n                                Password and Confirm Password do not match.\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                        <label for=\"txtMobileSignUp\" class=\"col-sm-4 col-form-label\">Mobile</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"tel\" class=\"form-control\" id=\"txtMobileSignUp\" placeholder=\"Mobile\"\n                                name=\"mobile\" formControlName=\"mobile\" [ngClass]=\"{\n                                'is-invalid': signUpForm.get('mobile')?.invalid && (signUpForm.get('mobile')?.dirty || signUpForm.get('mobile')?.touched || signUpForm.submitted),\n                                'is-valid': signUpForm.get('mobile')?.valid && (signUpForm.get('mobile')?.dirty || signUpForm.get('mobile')?.touched || signUpForm.submitted)\n                                }\">\n\n                            <!-- Error Messages -->\n                            <div\n                                *ngIf=\"signUpForm.get('mobile')?.invalid && (signUpForm.get('mobile')?.dirty || signUpForm.get('mobile')?.touched || signUpForm.submitted)\">\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('mobile')?.errors?.['required']\">\n                                    Mobile can't be blank.\n                                </div>\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('mobile')?.errors?.['pattern']\">\n                                    Mobile is invalid.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row mb-3\">\n                        <label for=\"txtDateOfBirthSignUp\" class=\"col-sm-4 col-form-label\">Date Of Birth</label>\n                        <div class=\"col-sm-8\">\n                            <input type=\"date\" class=\"form-control\" id=\"txtDateOfBirthSignUp\" name=\"dateOfBirth\"\n                                formControlName=\"dateOfBirth\" [ngClass]=\"{\n                                'is-invalid': signUpForm.get('dateOfBirth')?.invalid && (signUpForm.get('dateOfBirth')?.dirty || signUpForm.get('dateOfBirth')?.touched || signUpForm.submitted),\n                                'is-valid': signUpForm.get('dateOfBirth')?.valid && (signUpForm.get('dateOfBirth')?.dirty || signUpForm.get('dateOfBirth')?.touched || signUpForm.submitted)\n                                }\">\n\n                            <!-- Error Messages -->\n                            <div\n                                *ngIf=\"signUpForm.get('dateOfBirth')?.invalid && (signUpForm.get('dateOfBirth')?.dirty || signUpForm.get('dateOfBirth')?.touched || signUpForm.submitted)\">\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth')?.errors?.['required']\">\n                                    Date of birth can't be blank.\n                                </div>\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth')?.errors?.['minAge']\">\n                                    Minimum age must be 18.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"mb-3 row align-items-center\">\n                        <label class=\"col-sm-4 col-form-label\">Gender</label>\n                        <div class=\"col-sm-8\">\n                            <div class=\"form-check form-check-inline\" *ngFor=\"let genderOption of genderOptions\">\n                                <input class=\"form-check-input\" type=\"radio\" name=\"gender\"\n                                    [id]=\"'radioGender' + genderOption\"\n                                    [value]=\"genderOption.charAt(0).toLowerCase() + genderOption.slice(1)\"\n                                    formControlName=\"gender\">\n                                <label class=\"form-check-label\"\n                                    [for]=\"'radioGender' + genderOption\">{{genderOption}}</label>\n                            </div>\n                        </div>\n                        <!-- Error Messages -->\n                        <div class=\"col-sm-8 offset-sm-4\"\n                            *ngIf=\"signUpForm.get('gender')?.invalid && (signUpForm.get('gender')?.dirty || signUpForm.get('gender')?.touched || signUpForm.submitted)\">\n                            <div class=\"text-danger\" *ngIf=\"signUpForm.get('gender')?.errors?.['required']\">\n                                Plese select gender.\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mb-3 row\">\n                        <label for=\"txtCountrySignUp\" class=\"col-sm-4 col-form-label\">Country</label>\n                        <div class=\"col-sm-8\">\n                            <select class=\"form-select\" name=\"countryID\" id=\"txtCountrySignUp\"\n                                formControlName=\"countryID\" [ngClass]=\"{\n                                    'is-invalid': signUpForm.get('countryID')?.invalid && (signUpForm.get('countryID')?.dirty || signUpForm.get('countryID')?.touched || signUpForm.submitted),\n                                    'is-valid': signUpForm.get('countryID')?.valid && (signUpForm.get('countryID')?.dirty || signUpForm.get('countryID')?.touched || signUpForm.submitted)\n                                    }\">\n                                <option value=\"null\" disabled=\"disabled\">Please Select</option>\n                                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">\n                                    {{country.countryName}}\n                                </option>\n                            </select>\n\n                            <!-- Error Messages -->\n                            <div\n                                *ngIf=\"signUpForm.get('countryID')?.invalid && (signUpForm.get('countryID')?.dirty || signUpForm.get('countryID')?.touched || signUpForm.submitted)\">\n                                <div class=\"text-danger\" *ngIf=\"signUpForm.get('countryID')?.errors?.['required']\">\n                                    Please select country.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"mb-3 row\">\n                        <label class=\"col-sm-4\"></label>\n                        <div class=\"col-sm-8\">\n                            <input class=\"form-check-input me-1\" type=\"checkbox\" value=\"true\"\n                                id=\"textReceiveNewsLettersSignUp\" name=\"receiveNewsLetters\"\n                                formControlName=\"receiveNewsLetters\">\n                            <label class=\"form-check-label\" for=\"textReceiveNewsLettersSignUp\">\n                                Receive News Letters\n                            </label>\n                        </div>\n                    </div>\n\n                    <!-- Form Array Starts -->\n                    <div class=\"mb-3 row\" formArrayName=\"skills\">\n                        <label class=\"col-sm-4\" for=\"txtSkillsSignUp\">Skills</label>\n                        <div class=\"col-12 mt-2\">\n                            <div class=\"d-flex mb-2\" *ngFor=\"let skill of skills.controls; let i=index\"\n                                [formGroupName]=\"i\">\n                                <div class=\"col-5 me-2\">\n                                    <input type=\"text\" class=\"form-control\" id=\"txtSkillsSignUp\"\n                                        placeholder=\"Skill Name\" name=\"skillName\" formControlName=\"skillName\" [ngClass]=\"{\n                                        'is-invalid': skill.get('skillName')?.invalid && (skill.get('skillName')?.dirty || skill.get('skillName')?.touched || signUpForm.submitted),\n                                        'is-valid': skill.get('skillName')?.valid && (skill.get('skillName')?.dirty || skill.get('skillName')?.touched || signUpForm.submitted)\n                                        }\">\n\n                                    <!-- Error Messages -->\n                                    <div\n                                        *ngIf=\"skill.get('skillName')?.invalid && (skill.get('skillName')?.dirty || skill.get('skillName')?.touched || signUpForm.submitted)\">\n                                        <div class=\"text-danger\" *ngIf=\"skill.get('skillName')?.errors?.['required']\">\n                                            Skill name can't be blank.\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div class=\"col-5 me-2\">\n                                    <select class=\"form-select\" name=\"expertiseLevel\" formControlName=\"expertiseLevel\"\n                                        [ngClass]=\"{\n                                        'is-invalid': skill.get('expertiseLevel')?.invalid && (skill.get('expertiseLevel')?.dirty || skill.get('expertiseLevel')?.touched || signUpForm.submitted),\n                                        'is-valid': skill.get('expertiseLevel')?.valid && (skill.get('expertiseLevel')?.dirty || skill.get('expertiseLevel')?.touched || signUpForm.submitted)\n                                        }\">\n                                        <option value=\"null\" selected>Select Please</option>\n                                        <option value=\"Beginner\">Beginner</option>\n                                        <option value=\"Intermediate\">Intermediate</option>\n                                        <option value=\"Proficient\">Proficient</option>\n                                        <option value=\"Expert\">Expert</option>\n                                    </select>\n\n                                    <!-- Error Messages -->\n                                    <div\n                                        *ngIf=\"skill.get('expertiseLevel')?.invalid && (skill.get('expertiseLevel')?.dirty || skill.get('expertiseLevel')?.touched || signUpForm.submitted)\">\n                                        <div class=\"text-danger\"\n                                            *ngIf=\"skill.get('expertiseLevel')?.errors?.['required']\">\n                                            Please select expertise level.\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div class=\"col-2 d-flex align-items-center justify-content-center\">\n                                    <i class=\"fa-solid fa-trash text-danger\" (click)=\"onRemoveSkill(i)\"\n                                        style=\"cursor:pointer;\"></i>\n                                </div>\n                            </div>\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onAddSkill()\">Add Skill</button>\n                        </div>\n                    </div>\n                    <!-- Form Array Ends -->\n\n                    <div class=\"card-footer text-end\">\n                        <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n                    </div>\n\n                    <!-- {{ signUpForm.value | json}} -->\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Directive, ElementRef, HostBinding, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective implements OnInit {\n\n  // we can use input properties in the directive to receive parameters from host element\n  @Input(\"error\") error!: string;\n\n  @HostBinding(\"title\") titleProperty! : string;\n\n  divElement: any;\n  spanElement: any;\n  spanText: any;\n\n  //elementRef property represents the host element = an html element in which the directive is invoked\n  constructor(private elementRef: ElementRef,\n    private renderer: Renderer2) {\n  }\n\n\n  ngOnInit(): void {\n    \n    this.divElement = this.renderer.createElement(\"div\");\n    this.renderer.addClass(this.divElement, \"alert\");\n    this.renderer.addClass(this.divElement, \"alert-danger\");\n    this.renderer.setAttribute(this.divElement, \"role\", \"alert\");\n    this.renderer.setStyle(this.divElement, \"transition\", \"transform 0.5s\");\n    this.spanElement = this.renderer.createElement(\"span\");\n    this.spanText = this.renderer.createText(this.error);\n    this.renderer.appendChild(this.spanElement, this.spanText);\n    this.renderer.appendChild(this.divElement, this.spanElement);\n\n    // Append the alert to the nativeElement \n    let element = this.elementRef.nativeElement;\n    this.renderer.appendChild(element, this.divElement);\n\n    this.titleProperty = \"Please try again!\";\n  }\n\n  // when the mouse enter the element\n  @HostListener(\"mouseenter\")\n  onMouseEnter() {\n\n    // Add styles using Renderer2\n    this.renderer.setStyle(this.divElement, \"transform\", \"scale(1.1)\");\n  }\n\n  // when the mouse leaves the element\n  @HostListener(\"mouseleave\")\n  onMouseLeave() {\n\n    // Add styles using Renderer2\n    this.renderer.setStyle(this.divElement, \"transform\", \"scale(1)\");\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeater]'\n})\nexport class RepeaterDirective {\n\n  @Input(\"appRepeater\") counter!: number;\n\n  // the structural directive is a directive which creates an embedded view inside template view\n  // the viewContainerRef represents the reference of the child view that is created by using the structural directive.\n  // the TemplateRef represents the reference of <ng-template></ng-template> tag that is created automatically\n  constructor(private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>) {\n\n      this.viewContainerRef.clear(); // because i want to create my own embedded view\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.counter; i++) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef, { $implicit: i });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoginService } from '../services/login.service';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'  // by default it is injected in root level\n})\n\nexport class CanActivateGuardService implements CanActivate {  // Executes automatically before entering to the requested route\n\n  constructor(private loginService: LoginService,\n    private router: Router,\n    private jwtHelperService: JwtHelperService) { }\n\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n    //console.log(route.url);\n\n    var token = (sessionStorage.getItem(\"currentUser\") != null) ?\n    JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n\n\n    if (this.loginService.isAuthenticated() &&\n    route.data['expectedRoles'].includes(this.jwtHelperService.decodeToken(token).role)) { \n      return true;  // the user can navigate to the particular route\n    } else {\n      this.router.navigate(['/login']);\n      return false; // the user can't navigate to the particular route\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate{\n  canLeave : boolean;\n}\n\n@Injectable({\n  providedIn: 'root' // it is enregistred as root level service\n})\nexport class CanDeactivateGuardService implements CanDeactivate<CanComponentDeactivate> {\n\n  constructor() { }\n\n  canDeactivate(component: CanComponentDeactivate, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot | undefined): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    \n    if(component.canLeave == true){\n      return true;  // user can leave the current route\n    }\n    return confirm(\"Do you want to discard changes?\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../services/login.service';\n\n@Injectable({\n  providedIn: 'root'  // by default it is injected in root level\n})\nexport class NotAuthenticatedGuardService implements CanActivate {\n\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n    if (!this.loginService.isAuthenticated()) {\n      // If user is not authenticated, allow access to the route\n      return true;\n    } else {\n      // If user is authenticated, doesn't allow you access to the particular route\n      return false;\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { LoginService } from '../services/login.service';\n\n@Injectable({\n  providedIn: 'root' // by default it is injected in root level\n})\nexport class RedirectionGuardService implements CanActivate {\n\n  constructor(private loginService : LoginService, private router : Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n\n    if (this.loginService.isAuthenticated()) {\n        if (this.loginService.getCurrentUser()?.role == \"Admin\") {\n          this.router.navigate(['/admin', 'dashboard']);\n          return true;\n        }else{\n          this.router.navigate(['/employee', 'tasks']);\n          return true;\n        }\n    } else {\n      return true;\n    }\n}\n}\n","import { animate, style, transition, trigger, query, group , keyframes} from \"@angular/animations\";\r\n\r\nexport const fadeAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ opacity: 0 }),\r\n                    animate(\"0.6s\", style({ opacity: 1 }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ opacity: 1 }),\r\n                    animate(\"0.6s\", style({ opacity: 0 }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\n\r\nexport const slideUpAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: 'translateY(100%)' }),\r\n                    animate(\"0.6s\", style({ transform: 'translateY(0%)' }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: 'translateY(0%)' }),\r\n                    animate(\"0.6s\", style({ transform: 'translateY(-100%)' }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\nexport const zoomUpAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: 'scale(0) translateY(100%)' }),\r\n                    animate(\"0.6s\", style({ transform: 'scale(1) translateY(0%)' }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: 'scale(1) translateY(0%)' }),\r\n                    animate(\"0.6s\", style({ transform: 'scale(0) translateY(-100%)' }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\nexport const zoomLeftAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: 'scale(0) translateX(100%)' }),\r\n                    animate(\"0.6s\", style({ transform: 'scale(1) translateX(0%)' }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: 'scale(1) translateX(0%)' }),\r\n                    animate(\"0.6s\", style({ transform: 'scale(0) translateX(-100%)' }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\n    export const slideLeftOrRightAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"0 => 1\", slideRight()),\r\n        transition(\"0 => 2\", slideRight()),\r\n        transition(\"0 => 3\", slideRight()),\r\n        transition(\"0 => 4\", slideRight()),\r\n        transition(\"0 => 5\", slideRight()),\r\n\r\n        transition(\"1 => 0\", slideLeft()),\r\n        transition(\"1 => 2\", slideRight()),\r\n        transition(\"1 => 3\", slideRight()),\r\n        transition(\"1 => 4\", slideRight()),\r\n        transition(\"1 => 5\", slideRight()),\r\n\r\n        transition(\"2 => 0\", slideLeft()),\r\n        transition(\"2 => 1\", slideLeft()),\r\n        transition(\"2 => 3\", slideRight()),\r\n        transition(\"2 => 4\", slideRight()),\r\n        transition(\"2 => 5\", slideRight()),\r\n\r\n        transition(\"3 => 0\", slideLeft()),\r\n        transition(\"3 => 1\", slideLeft()),\r\n        transition(\"3 => 2\", slideLeft()),\r\n        transition(\"3 => 4\", slideRight()),\r\n        transition(\"3 => 5\", slideRight()),\r\n\r\n        transition(\"4 => 0\", slideLeft()),\r\n        transition(\"4 => 1\", slideLeft()),\r\n        transition(\"4 => 2\", slideLeft()),\r\n        transition(\"4 => 3\", slideLeft()),\r\n        transition(\"4 => 5\", slideRight()),\r\n\r\n        transition(\"5 => 0\", slideLeft()),\r\n        transition(\"5 => 1\", slideLeft()),\r\n        transition(\"5 => 2\", slideLeft()),\r\n        transition(\"5 => 3\", slideLeft()),\r\n        transition(\"5 => 4\", slideLeft()),\r\n\r\n\r\n    ]);\r\n\r\nfunction slideLeft() {\r\n    return [\r\n        query(\":enter, :leave\",\r\n            style({ position: 'absolute', width: '98%' }),\r\n            { optional: true }),\r\n\r\n        group([\r\n\r\n            query(\":enter\", [\r\n                style({ transform: 'translateX(100%)' }),\r\n                animate(\"0.6s\", style({ transform: 'translateX(0%)' }))\r\n            ], { optional: true }),\r\n\r\n            query(\":leave\", [\r\n                style({ transform: 'translateX(0%)' }),\r\n                animate(\"0.6s\", style({ transform: 'translateX(-100%)' }))\r\n            ], { optional: true })\r\n\r\n        ])\r\n    ];\r\n}\r\n\r\nfunction slideRight() {\r\n    return [\r\n        query(\":enter, :leave\",\r\n            style({ position: 'absolute', width: '98%' }),\r\n            { optional: true }),\r\n\r\n        group([\r\n\r\n            query(\":enter\", [\r\n                style({ transform: 'translateX(-100%)' }),\r\n                animate(\"0.6s\", style({ transform: 'translateX(0%)' }))\r\n            ], { optional: true }),\r\n\r\n            query(\":leave\", [\r\n                style({ transform: 'translateX(0%)' }),\r\n                animate(\"0.6s\", style({ transform: 'translateX(100%)' }))\r\n            ], { optional: true })\r\n\r\n        ])\r\n    ];\r\n}\r\n\r\nexport const keyFrameAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    animate(\"1s\", keyframes([\r\n                        style({ offset:0, transform: 'scale(0) translateX(100%)', 'transform-origin':'center left' }),\r\n                        style({ offset:0.3, transform: 'scale(0.5) translateX(30%)', 'transform-origin':'center left' }),\r\n                        style({ offset:0.7, transform: 'scale(0.5) translateX(30%)', 'transform-origin':'center left' }),\r\n                        style({ offset:1, transform: 'scale(1) translateX(0%)', 'transform-origin':'center left' }),\r\n                    ]))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    animate(\"1s\", keyframes([\r\n                        style({ offset:0, transform: 'scale(1) translateX(0%)', 'transform-origin':'center right' }),\r\n                        style({ offset:0.3, transform: 'scale(0.5) translateX(-30%)', 'transform-origin':'center right' }),\r\n                        style({ offset:0.7, transform: 'scale(0.5) translateX(-30%)', 'transform-origin':'center right' }),\r\n                        style({ offset:1, transform: 'scale(0) translateX(-100%)', 'transform-origin':'center right' }),\r\n                    ]))\r\n                ], { optional: true })\r\n            ])\r\n        ])\r\n    ]);","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    var currentUser: any = { token: \"\" };\n    if (sessionStorage[\"currentUser\"] != null) {\n      currentUser = JSON.parse(sessionStorage[\"currentUser\"]);\n    }\n    \n    request = request.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + currentUser.token\n      }\n    });\n\n    return next.handle(request);\n\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        return next.handle(request).pipe(tap({\n\n            next: (event: HttpEvent<any>) => {\n                if (event instanceof HttpResponse) {\n                    // Do Something here\n                }\n            },\n            error: (error: any) => {\n                if (error instanceof HttpErrorResponse) {\n                    if (error.status == 401) {\n                        console.log(error);\n                        alert('401 UnAuthorized!');\n                    }\n                }\n            }\n        }));\n    }\n}\n","export class LoginViewModel {\n    // Properties\n    email: string;\n    password: string;\n\n    // Constructor\n    constructor(){\n        this.email = \"\";\n        this.password = \"\";\n    }\n}\n","export class PersonFullName {\n    firstName: string | any;\n    lastName: string | any;\n\n    constructor(){\n        this.firstName = null;\n        this.lastName = null;\n    }\n};\n\nexport class SignUpViewModel {\n\n    personName : PersonFullName;\n    email: string | any;\n    mobile: string | any;\n    dateOfBirth: string | any;\n    password: string | any;\n    confirPassword: string | any;\n    gender: string | any;\n    countryID: number | any;\n    receiveNewsLetters: boolean | any;\n    skills: any[];\n\n    constructor() {\n\n        this.personName = new PersonFullName();\n        this.email = null;\n        this.mobile = null;\n        this.dateOfBirth = null;\n        this.password = null;\n        this.confirPassword = null;\n        this.gender = null;\n        this.countryID = null;\n        this.receiveNewsLetters = false;\n        this.skills = [];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable, map } from 'rxjs';\nimport { SignUpService } from './sign-up.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService {\n\n  constructor(private signUpService: SignUpService) { }\n\n  public minimumAgeValidator(minimumAge: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (control.value == null) {\n        return null; // retgurn null if Date of birth is null\n      }\n      let toDay = new Date();\n      let dateOfBirth = new Date(control.value);\n      let timeDiff = Math.abs(toDay.getTime() - dateOfBirth.getTime());\n      let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\n      if (age >= minimumAge) {\n        return null;  // Date of birth is valid\n      }\n      return { minAge: { valid: false } };  // Date of birth is invalid\n    }\n  }\n\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (formGroup.get(controlToValidate)?.value == null) {  // return null if Confirm Password is null\n        return null;\n      }\n      if (formGroup.get(controlToCompare)?.value == formGroup.get(controlToValidate)?.value) {  //  controlToValidate == controlToCompare\n        return null;  // Valid\n      } else {\n        formGroup.get(controlToValidate)?.setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } };  // Invalid\n      }\n    }\n  }\n\n  public duplicateEmail(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      return this.signUpService.getUserByEmail(control.value).pipe(map(\n        (user : any) => {\n          if (user != null) {\n            return { duplicateEmail: {valid : false}}; // Invalid\n          }\n          return null;  // Valid\n        }\n      ));\n    };\n  }\n\n\n}\n","import { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginViewModel } from '../models/login-view-model';\nimport { Observable, map } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  // Properties\n  //currentUserName: any = null;\n  private httpClient: HttpClient | null = null;\n\n  // Constructor\n  constructor(private httpBackend: HttpBackend,\n    private router: Router,\n    private jwtHelperService: JwtHelperService) {\n  }\n\n  public login(loginViewModel: LoginViewModel): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);  // httpClient represents HttpClient without Interceptors\n    return this.httpClient.post<any>('api/account/authenticate', loginViewModel, { responseType: 'json' })\n      .pipe(map(\n        (user: any) => {\n          if (user != null) {\n            //this.currentUserName = user.userName;\n            // after the user in loged JWT token will be generated on the server an the same will be sent to de browser and stored in Session Storage\n            sessionStorage['currentUser'] = JSON.stringify(user);\n          }\n          return user;\n        }\n      ));\n  }\n\n  public logout(): void {\n    sessionStorage.removeItem('currentUser');\n    //this.currentUserName = null;\n    this.router.navigate(['/login']);\n  }\n\n  public isAuthenticated(): boolean {\n    var token = (sessionStorage.getItem(\"currentUser\") != null) ?\n      JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.jwtHelperService.isTokenExpired(token)) {\n      return false;   // token is invalid\n    } else {\n      return true; // token is valid\n    }\n  }\n\n  public getCurrentUser(): any{\n    var currentUser = (sessionStorage.getItem(\"currentUser\") != null) ?\n      JSON.parse(sessionStorage.getItem(\"currentUser\") as string) : null;\n      return currentUser;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, map } from 'rxjs';\nimport { Project } from '../models/project';\nimport { DatePipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'  // this service available globaly for the entire project\n})\nexport class ProjectsService {\n\n  //private jsonServerUrl = \"http://localhost:3000/projects\";\n\n  public myBehaviorSubject: BehaviorSubject<boolean>;\n\n  constructor(private httpClient: HttpClient,\n    private datePipe: DatePipe) {\n    \n      this.myBehaviorSubject = new BehaviorSubject<boolean>(false);  // false = current value stored in it \n  }\n\n  toggleDetails() {\n\n    // this.hideDetails = !this.hideDetails;\n\n    this.myBehaviorSubject.next(!this.myBehaviorSubject.value);    // Pass notification to all subscribers at-a-time without skip any one\n  }\n\n  /*\n \n    // Json-server package:\n    getAllProjects(): Observable<Project[]> {\n      return this.httpClient.get<Project[]>(this.jsonServerUrl, { responseType: 'json' })\n        .pipe(map(\n          (dataResponse: Project[]) => {\n            for (let i = 0; i < dataResponse.length; i++) {\n              dataResponse[i].dateOfStart = this.datePipe.transform(dataResponse[i].dateOfStart, \"yyyy-MM-dd\");\n            }\n            return dataResponse;\n          }\n        ));\n    }\n  \n    insertProject(newProject: Project): Observable<Project> {\n      return this.httpClient.post<Project>(this.jsonServerUrl, newProject, { responseType: 'json' })\n        .pipe(map(\n          (dataResponse: Project) => {\n            dataResponse.dateOfStart = this.datePipe.transform(dataResponse.dateOfStart, \"yyyy-MM-dd\");\n            return dataResponse;\n          }\n        ));\n    }\n  \n    getProjectByProjectID(id: number): Observable<Project> {\n      return this.httpClient.get<Project>(`${this.jsonServerUrl}/${id}`, { responseType: 'json' })\n        .pipe(map(\n          (dataResponse: Project) => {\n            dataResponse.dateOfStart = this.datePipe.transform(dataResponse.dateOfStart, \"yyyy-MM-dd\");\n            return dataResponse;\n          }\n        ));\n    }\n  \n    updateProject(id: number, existingProject: Project): Observable<Project> {\n      return this.httpClient.put<Project>(`${this.jsonServerUrl}/${id}`, existingProject, { responseType: 'json' })\n      .pipe(map(\n        (dataResponse: Project) => {\n          dataResponse.dateOfStart = this.datePipe.transform(dataResponse.dateOfStart, \"yyyy-MM-dd\");\n          return dataResponse;\n        }\n      ));\n    }\n  \n    deleteProject(id: number): Observable<void> {\n      return this.httpClient.delete<void>(`${this.jsonServerUrl}/${id}`);\n    }\n  \n    searchProjects(searchBy: string, searchText: string): Observable<Project[]> {\n      return this.httpClient.get<Project[]>(`${this.jsonServerUrl}?${searchBy}=${searchText}`, { responseType: 'json' })\n        .pipe(map(\n          (dataResponse: Project[]) => {\n            for (let i = 0; i < dataResponse.length; i++) {\n              dataResponse[i].dateOfStart = this.datePipe.transform(dataResponse[i].dateOfStart, \"yyyy-MM-dd\");\n            }\n            return dataResponse;\n          }\n        ));\n    }\n \n  */\n\n  // Asp .Net Core Web API\n  getAllProjects(): Observable<Project[]> {\n\n    //debugger; // adding another debugger as breakpoint here.\n    return this.httpClient.get<Project[]>('api/projects', { responseType: 'json' })\n      .pipe(map(\n        (dataResponse: Project[]) => {\n          for (let i = 0; i < dataResponse.length; i++) {\n            dataResponse[i].dateOfStart = this.datePipe.transform(dataResponse[i].dateOfStart, \"yyyy-MM-dd\");\n          }\n          //debugger; // adding another debugger as breakpoint here.\n          return dataResponse;\n        }\n      ));\n  }\n\n  insertProject(newProject: Project): Observable<Project> {\n    return this.httpClient.post<Project>('api/projects', newProject, { responseType: 'json' })\n      .pipe(map(\n        (dataResponse: Project) => {\n          dataResponse.dateOfStart = this.datePipe.transform(dataResponse.dateOfStart, \"yyyy-MM-dd\");\n          return dataResponse;\n        }\n      ));\n  }\n\n  getProjectByProjectID(projectID: number): Observable<Project> {\n    return this.httpClient.get<Project>(`api/projects/${projectID}`, { responseType: 'json' })\n      .pipe(map(\n        (dataResponse: Project) => {\n          if (dataResponse != null) {\n            dataResponse.dateOfStart = this.datePipe.transform(dataResponse.dateOfStart, \"yyyy-MM-dd\");\n          }\n          return dataResponse;\n        }\n      ));\n  }\n\n  updateProject(projectID: number, existingProject: Project): Observable<Project> {\n    return this.httpClient.put<Project>(`api/projects/${projectID}`, existingProject, { responseType: 'json' })\n      .pipe(map(\n        (dataResponse: Project) => {\n          dataResponse.dateOfStart = this.datePipe.transform(dataResponse.dateOfStart, \"yyyy-MM-dd\");\n          return dataResponse;\n        }\n      ));\n  }\n\n  deleteProject(projectID: number): Observable<void> {\n    return this.httpClient.delete<void>(`api/projects/${projectID}`);\n  }\n\n  searchProjects(searchBy: string, searchText: string): Observable<Project[]> {\n    return this.httpClient.get<Project[]>(`api/projects/search?searchBy=${searchBy}&searchText=${searchText}`, { responseType: 'json' })\n      .pipe(map(\n        (dataResponse: Project[]) => {\n          for (let i = 0; i < dataResponse.length; i++) {\n            dataResponse[i].dateOfStart = this.datePipe.transform(dataResponse[i].dateOfStart, \"yyyy-MM-dd\");\n          }\n          return dataResponse;\n        }\n      ));\n  }\n}\n","import { HttpBackend, HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService {\n\n  // Constructor\n  constructor(private httpBackend: HttpBackend,\n    private httpClient: HttpClient) { }\n\n  // Methods\n  log(logMessage: string): Observable<void>{\n    this.httpClient = new HttpClient(this.httpBackend);  // httpClient represents HttpClient without Interceptors\n    return this.httpClient.post<void>('api/RouterLogger', logMessage, {headers: new HttpHeaders().set(\"content-type\", \"text/plain\")});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SignUpViewModel } from '../models/sign-up-view-model';\nimport { Observable, map } from 'rxjs';\nimport { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Country } from '../models/country';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignUpService {\n\n  constructor(private httpBackend: HttpBackend, private httpClient: HttpClient) { }\n\n  signUp(signUpViewModel: SignUpViewModel): Observable<any> {\n\n    this.httpClient = new HttpClient(this.httpBackend);  // httpClient represents HttpClient without Interceptors\n\n    return this.httpClient.post<any>('api/account/register', signUpViewModel, { responseType: 'json' })\n      .pipe(map(\n        (user: any) => {\n          if (user != null) {\n            //this.currentUserName = user.userName;\n            // after the user in loged JWT token will be generated on the server an the same will be sent to de browser and stored in Session Storage\n            sessionStorage['currentUser'] = JSON.stringify(user);\n          }\n          return user;\n        }\n      ));\n  }\n\n  getUserByEmail(email: string): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);  // httpClient represents HttpClient without Interceptors\n    return this.httpClient.get<any>(`api/account/getUserByEmail/${email}`, { responseType: 'json' });\n  }\n\n  getAllCountries(): Observable<Country[]> {\n    this.httpClient = new HttpClient(this.httpBackend);  // httpClient represents HttpClient without Interceptors\n    return this.httpClient.get<Country[]>(`api/account`, { responseType: 'json' });\n  }\n\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl,  NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[clientLocationStatusValidator]', \n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: ClientLocationStatusValidatorDirective,\n      multi: true\n    }\n  ]\n})\n\nexport class ClientLocationStatusValidatorDirective implements Validator {\n\n  constructor() { }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    \n    // console.log(`control.value.selectedClientLocationName : '${control.value.selectedClientLocationName}'`);\n    // console.log(`control.value.status : '${control.value.status}'`);\n\n    if (control.value.status == \"Support\" && control.value.selectedClientLocationName == \"New York\") {\n      //console.log(\"Invalid\");\n      return { clientLocationStatus: { valid: false } }; //invalid\n    }\n    else {\n      //console.log(\"Valid\");\n      return null; //valid\n    }\n  }\n\n}\n\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appComponentLoader]'\n})\nexport class ComponentLoaderDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from '../../services/projects.service';\nimport { Observable, map } from 'rxjs';\nimport { Project } from '../../models/project';\n\n@Directive({\n  selector: '[projectIDUniqueValidator]',\n  providers: [\n    {\n      provide: NG_ASYNC_VALIDATORS,\n      useExisting: ProjectIDUniqueValidatorDirective,\n      multi: true\n    }\n  ]\n})\n\n\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator {\n\n  constructor(private projectsService: ProjectsService) { }\n\n  validate(control: AbstractControl): Observable<ValidationErrors | null> {\n\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map(\n      (response: Project) => {\n        if (response != null) {\n          return { uniqueProjectID: { valid: false } };\n        } else {\n          return null;\n        }\n      }\n    ));\n  }\n\n}\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({  // the decorator Directive indicates that TeamSizeValidatorDirective class is a directive class is not a regular class.\n  selector: '[teamSizeValidator]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: TeamSizeValidatorDirective,\n      multi : true\n    }\n  ]\n})\nexport class TeamSizeValidatorDirective implements Validator {\n\n  // Propeties\n  @Input(\"teamSizeValidator\") amount: number | any = null;\n\n  // Constructor\n  constructor() { }\n\n  // Methods\n  validate(control: AbstractControl): ValidationErrors | null {\n\n    let currentValueControl = control.value;\n    let isValid = ((currentValueControl % this.amount) == 0);\n\n    if (isValid) {\n      return null;  // Valid Input\n    } else {\n      return { divisible: { valid: false } }; //  Invalid Input\n    }\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], searchBy: string, searchText: string): any {\n    if (value == null) {\n      return null;\n    }\n    if ((searchBy === null || searchBy.trim() === \"\") ||\n      (searchText === null || searchText.trim() === \"\")) {\n      return value;\n    }\n    let resultArray: any[] = [];\n    resultArray = value.filter((item) => {\n      // Convert property value and searchText to lowercase for case-insensitive search\n      let propertyValue = item[searchBy as keyof any].toString().toLowerCase();\n      let searchValue = searchText.toLowerCase();\n      return propertyValue.includes(searchValue);\n    });\n    return resultArray;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform {\n\n  \n  transform(value: any, separator: string = \", \"): any {\n    //debugger;\n    if (value == null) {   // value represents the current value of component property\n      return null;\n    } else {\n      return this.inWords(value, separator);\n    }\n  }\n\n  private inWords(number: any, separator: any): any {\n    //debugger;\n    let a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    let b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    let g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = (x: any) => Array.from(x);\n    const num = (x: any) => Number(x) || 0;\n    const str = (x: any) => String(x);\n    const isEmpty = (xs: any) => xs.length === 0;\n    const take = (n: any) => (xs: any) => xs.slice(0, n);\n    const drop = (n: any) => (xs: any) => xs.slice(n);\n    const reverse = (xs: any) => xs.slice(0).reverse();\n    const comp = (f: any) => (g: any) => (x: any) => f(g(x));\n    const not = (x: any) => !x;\n    const chunk = (n: any): any => (xs: any): any =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    let makeGroup = ([ones, tens, huns]: any) => {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    let thousand = (group: any, i: any) => group === '' ? group : `${group} ${g[i]}`;\n\n    if (typeof number === 'number')\n      return this.inWords(str(number), separator);\n    else if (number === '0')\n      return 'Zero';\n    else\n    //debugger;\n      return comp(chunk(3))(reverse)(arr(number))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(separator);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'paging',\n  pure: false\n})\nexport class PagingPipe implements PipeTransform {\n\n  transform(value: any[], currentPageIndex: number, pageSize: number): any {\n\n    if (value == null) {\n      return null;\n    }\n    \n    let resultArray : any[] = [];\n    let startIndex = currentPageIndex * pageSize;  //1  => 3,4,5\n    let endIndex = startIndex + pageSize; // 6\n    resultArray = value.slice(startIndex, endIndex);\n    \n    return resultArray;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort',\n  pure: false\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: any[], sortBy: string, sortOrder: string): any {\n\n    if (value == null) {\n      return null;\n    }\n\n    if (sortBy === null || sortBy.trim() === \"\") {\n      return value;\n    }\n\n    let sortedArray = value.slice().sort((object1, object2) => {\n      let sortByOne = object1.hasOwnProperty(sortBy) ? object1[sortBy] : '';\n      let sortByTwo = object2.hasOwnProperty(sortBy) ? object2[sortBy] : '';\n\n      if (typeof sortByOne != typeof sortByOne) {\n        return 0;\n      } else {  //  they have the same type\n        switch (typeof sortByOne) {\n          case 'string':\n            sortByOne = object1[sortBy].toUpperCase();\n            sortByTwo = object2[sortBy].toUpperCase();\n            return this.sortingTwoProperties(sortByOne, sortByTwo);\n          case 'number':\n            return this.sortingTwoProperties(sortByOne, sortByTwo);\n          default:\n            return 0;\n        }\n      }\n    });\n\n    if (sortOrder == \"ASC\") {\n      return sortedArray;\n    } else {\n      return sortedArray.reverse();\n    }\n  }\n\n  private sortingTwoProperties(propOne: any, propTwo: any): number {\n    if (propOne < propTwo) {\n      return -1;\n    } else if (propOne > propTwo) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamSizeValidatorDirective } from './directives/team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from './directives/client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from './directives/project-idunique-validator.directive';\nimport { NumberToWordsPipe } from './pipes/number-to-words.pipe';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { PagingPipe } from './pipes/paging.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ComponentLoaderDirective } from './directives/component-loader.directive';\nimport { SortPipe } from './pipes/sort.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    NumberToWordsPipe, \n    FilterPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    NumberToWordsPipe, \n    FilterPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe,\n    \n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["FormGroup","Validators","SignUpViewModel","i0","genderOption_r27","ctx_r39","SignUpComponent","constructor","formBuilder","customValidatorsService","signUpService","loginService","router","ngOnInit","getAllCountries","subscribe","next","response","countries","signUpForm","group","personName","firstName","validators","required","minLength","lastName","email","asyncValidators","duplicateEmail","updateOn","password","confirmPassword","mobile","pattern","dateOfBirth","minimumAgeValidator","gender","countryID","receiveNewsLetters","skills","array","compareValidator","submitted","valueChanges","value","canLeave","ngAfterViewInit","inputFirstName","nativeElement","focus","onSubmitSignUp","valid","signUpViewModel","signUp","getCurrentUser","role","navigate","error","console","log","signUpError","get","initialSkills","skillName","expertiseLevel","onAddSkill","push","onRemoveSkill","index","removeAt","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///"}